{{- /*gotype:heckel.io/replbot/util.tmuxScriptParams*/ -}}
#!/bin/sh

set -e

# Find the tmux binary to avoid zsh alias issues
TMUX_BIN="{{.TmuxPath}}"
if [ -z "$TMUX_BIN" ]; then
  for path in /opt/homebrew/bin/tmux /usr/bin/tmux /usr/local/bin/tmux; do
    if [ -x "$path" ]; then
      TMUX_BIN="$path"
      break
    fi
  done
fi

if [ -z "$TMUX_BIN" ]; then
  echo "ERROR: Could not find tmux binary" >&2
  exit 1
fi

# Use function to ensure we always use the binary
tmux() {
  "$TMUX_BIN" "$@"
}

main_id="{{.MainID}}"
frame_id="{{.FrameID}}"
window_width="{{.Width}}"
window_height="{{.Height}}"
command="{{.Command}}"
config_file="{{.ConfigFile}}"
capture_file="{{.CaptureFile}}"
launch_script_file="{{.LaunchScriptFile}}"
supports_window_size="{{if .SupportsWindowSize}}true{{end}}"

# Set up cleanup hooks
cleanup_on_failure() {
  set +e
  rm -f "${config_file}" "${launch_script_file}"
  tmux kill-session -t "${main_id}" 2>/dev/null
  tmux kill-session -t "${frame_id}" 2>/dev/null
}
trap cleanup_on_failure EXIT

# Write tmux.conf
cat > "${config_file}" <<TMUXCONF
set-option default-terminal xterm-256color
set-option -g history-limit 50000
TMUXCONF

# Write launch script
cat > "${launch_script_file}" <<LAUNCHSCRIPT
#!/bin/sh
export {{ range $key, $value := .Env }}{{ $key }}="{{ $value }}" {{ end }}
exec ${command}
LAUNCHSCRIPT
chmod 700 "${launch_script_file}"

# Start main tmux session
if ! tmux -f "${config_file}" new-session -s "${main_id}" -d "${launch_script_file}"; then
  exit 1
fi


tmux bind-key -n C-F12 detach
tmux set-option -t "${main_id}" status off
tmux set-option -t "${main_id}" prefix none
# Set remain-on-exit to 'on' explicitly
tmux set-option -t "${main_id}" remain-on-exit on
tmux set-hook -t "${main_id}" pane-died "capture-pane -S- -E-; save-buffer '${capture_file}'; kill-pane"
if [ -n "${supports_window_size}" ]; then
  tmux set-option -t "${main_id}" window-size smallest # default is 'latest' as of tmux >= 2.9
fi

# Start frame tmux session attaches to main session, allows resizing window
tmux -f "${config_file}" new-session -s "${frame_id}" -d -x 200 -y 80 sh -c "while true; do sleep 10; if ! tmux has-session -t '${main_id}'; then exit; fi; done"
tmux set-option -t "${frame_id}" status off
tmux split-window -v -t "${frame_id}.0" sh -c "while true; do sleep 10; if ! tmux has-session -t '${main_id}'; then exit; fi; done"
tmux split-window -h -t "${frame_id}.1" sh -c "unset TMUX; tmux attach -t '${main_id}'"
tmux resize-pane -t "${frame_id}.2" -x "${window_width}" -y "${window_height}"
tmux select-pane -t "${frame_id}.2"
if [ -n "${supports_window_size}" ]; then
  tmux set-option -t "${frame_id}" window-size smallest # default is 'latest' as of tmux >= 2.9
fi

# Clean exit - only remove config file, not launch script
# The launch script needs to exist when tmux starts executing it
rm -f "${config_file}"
trap - EXIT
